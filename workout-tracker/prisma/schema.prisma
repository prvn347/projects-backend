generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  username   String    @unique
  email      String    @unique
  password   String
  name       String
  workouts   Workout[]
  createdAt  DateTime  @default(now())
}

model Workout {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  schedules    WorkoutSchedule[]
  userId      Int
  note        String?
  User        User           @relation(fields: [userId], references: [id])
  exercises   WorkoutExercise[]
}

model WorkoutSchedule {
  id            Int       @id @default(autoincrement())
  workoutId     Int
  scheduleTime  DateTime  // Specific date and time for the workout
  isRecurring   Boolean   @default(false)
  recurrenceRule String?  // Optional field for recurrence rules in iCal format
  Workout       Workout   @relation(fields: [workoutId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}


model Exercise {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  sets        Int
  reps        Int
  rest        Int
  category    Category
  workouts    WorkoutExercise[]
}

model WorkoutExercise {
  id          Int        @id @default(autoincrement())
  workoutId   Int
  exerciseId  Int
  Workout     Workout    @relation(fields: [workoutId], references: [id])
  Exercise    Exercise   @relation(fields: [exerciseId], references: [id])
}
enum Category {
  FLEXIBILITY
  STRENGTH
  ENDURANCE
  AEROBIC
}
